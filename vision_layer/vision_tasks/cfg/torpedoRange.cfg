#!/usr/bin/env python
PACKAGE="vision_tasks"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

## Blue filter parameters
gen.add("clahe_clip", double_t, 0, "Clip limit for CLAHE", 0.15, 0.0, 40.0);
gen.add("clahe_grid_size", int_t, 0, "Grid size of the CLAHE operator", 3, 1, 16);
gen.add("clahe_bilateral_iter", int_t, 0, "Number of iterations of bilateral filter after CLAHE is applied", 2, 0, 16);
gen.add("balanced_bilateral_iter", int_t, 0, "Number of iterations of bilateral filter after white balancing is applied", 4, 0, 8);
gen.add("denoise_h", double_t, 0, "h value for fast non-local means denoising applied on the final blue-filtered image", 5.6, 0, 20.0);

## Thresholding parameters
gen.add("color", int_t, 0, "The chosen color", 0, 0, 1);
gen.add("low_h", int_t, 0, "Lower Bound of H", 53, 0, 255);
gen.add("high_h", int_t, 0, "Higher Bound of H", 86, 0, 255);
gen.add("low_s", int_t, 0, "Lower Bound of S", 128, 0, 255);
gen.add("high_s", int_t, 0, "Higher Bound of S", 255, 0, 255);
gen.add("low_v", int_t, 0, "Lower Bound of V", 104, 0, 255);
gen.add("high_v", int_t, 0, "Higher Bound of V", 202, 0, 255);

## Morphological parameters
gen.add("opening_mat_point", int_t, 0, "Center of the matrix for the opening operation (size extrapolated 2x+1)", 2, 1, 7);
gen.add("opening_iter", int_t, 0, "Iterations of opening applied on the thresholded image", 1, 0, 10);
gen.add("closing_mat_point", int_t, 0, "Center of the matrix for the closing operation (size extrapolated 2x+1)", 2, 1, 7);
gen.add("closing_iter", int_t, 0, "Iterations of closing applied on the opened thresholded image", 3, 0, 10);

exit(gen.generate(PACKAGE, "vision_tasks", "torpedoRange"));
