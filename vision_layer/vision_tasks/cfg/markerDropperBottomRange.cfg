#!/usr/bin/env python
PACKAGE="vision_tasks"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

## Blue filter parameters
gen.add("bottom_clahe_clip", double_t, 0, "Clip limit for CLAHE", 4.0, 0.0, 40.0);
gen.add("bottom_clahe_grid_size", int_t, 0, "Grid size of the CLAHE operator", 8, 1, 16);
gen.add("bottom_clahe_bilateral_iter", int_t, 0, "Number of iterations of bilateral filter after CLAHE is applied", 4, 0, 16);
gen.add("bottom_balanced_bilateral_iter", int_t, 0, "Number of iterations of bilateral filter after white balancing is applied", 2, 0, 8);
gen.add("bottom_denoise_h", double_t, 0, "h value for fast non-local means denoising applied on the final blue-filtered image", 10.0, 0, 20.0);

## Morphological parameters
gen.add("bottom_opening_mat_point", int_t, 0, "Center of the matrix for the opening operation (size extrapolated 2x+1)", 1, 1, 7);
gen.add("bottom_opening_iter", int_t, 0, "Iterations of opening applied on the thresholded image", 0, 0, 10);
gen.add("bottom_closing_mat_point", int_t, 0, "Center of the matrix for the closing operation (size extrapolated 2x+1)", 1, 1, 7);
gen.add("bottom_closing_iter", int_t, 0, "Iterations of closing applied on the opened thresholded image", 1, 0, 10);

## Thresholding parameters
gen.add("bottom_low_h", int_t, 0, "Lower Bound of H", 0, 0, 255);
gen.add("bottom_high_h", int_t, 0, "Higher Bound of H", 73, 0, 255);
gen.add("bottom_low_s", int_t, 0, "Lower Bound of S", 166, 0, 255);
gen.add("bottom_high_s", int_t, 0, "Higher Bound of S", 255, 0, 255);
gen.add("bottom_low_v", int_t, 0, "Lower Bound of V", 0, 0, 255);
gen.add("bottom_high_v", int_t, 0, "Higher Bound of V", 255, 0, 255);


## Morphological parameters
gen.add("bottom_opening_mat_point_blue", int_t, 0, "Center of the matrix for the opening operation (size extrapolated 2x+1)", 1, 1, 7);
gen.add("bottom_opening_iter_blue", int_t, 0, "Iterations of opening applied on the thresholded image", 0, 0, 10);
gen.add("bottom_closing_mat_point_blue", int_t, 0, "Center of the matrix for the closing operation (size extrapolated 2x+1)", 1, 1, 7);
gen.add("bottom_closing_iter_blue", int_t, 0, "Iterations of closing applied on the opened thresholded image", 1, 0, 10);

## Thresholding parameters
gen.add("bottom_low_h_blue", int_t, 0, "Lower Bound of H", 0, 0, 255);
gen.add("bottom_high_h_blue", int_t, 0, "Higher Bound of H", 42, 0, 255);
gen.add("bottom_low_s_blue", int_t, 0, "Lower Bound of S", 0, 0, 255);
gen.add("bottom_high_s_blue", int_t, 0, "Higher Bound of S", 255, 0, 255);
gen.add("bottom_low_v_blue", int_t, 0, "Lower Bound of V", 29, 0, 255);
gen.add("bottom_high_v_blue", int_t, 0, "Higher Bound of V", 255, 0, 255);

exit(gen.generate(PACKAGE, "vision_tasks", "markerDropperBottomRange"));
